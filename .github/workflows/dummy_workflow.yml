name: Build

on:
  # push:
  workflow_dispatch:
    # branches:
    #   - main
    # paths:
    #   - 'transformation_query/**'
# permissions:
#   contents: read
#   pages: write


env:
  # -run: python vars.py
  ACTIONS_RUNNER_DEBUG: true
  snow_user: ${{ secrets.SNOW_USER }}
  snow_pwd: ${{ secrets.SNOW_PASSWORD }}
  snow_acc: ${{ secrets.SNOW_ACCOUNT }}
  GIT_WORKSPACE_: ${{ github.workspace }}
  SNOWFLAKE_PASSWORD: ${{ secrets.SNOW_PASSWORD }}

jobs:
  run-tests:
    strategy:
      fail-fast: false
      matrix: 
        os: [windows-latest]
        python-version:
          - "3.10"
    
    name: Test
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests
        run: pytest -v

      - name: Run Variable File
        run: python vars.py
      
      # - run: echo $GITHUB_WORKSPACE

      - name: commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A
          git diff-index --quiet HEAD || (git commit -a -m "updated" --allow-empty) 

      - name: push changes
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main
          
      - name: run schemachange!
        run: |
          pip install schemachange
          schemachange -f ${{ github.workspace }}/schema_change -a ${{ secrets.SNOW_ACCOUNT }} -u ${{ secrets.SNOW_USER }} -u ${{ secrets.SNOW_USER }} -r ${{ env.ROLE }} -w ${{ env.WAREHOUSE }} -d ${{ env.DEPLOY_DB }} -c ${{ env.DEPLOY_DB }}.SCHEMACHANGE.CHANGE_HISTORY --create-change-history-table